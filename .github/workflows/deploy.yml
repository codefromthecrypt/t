# yamllint --format github .github/workflows/deploy.yml
---
name: deploy

# We deploy on master and release versions, regardless of if the commit is
# documentation-only or not.
#
# See https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
on:
  push:
    # Don't deploy tags as they conflict with [maven-release-plugin] prepare release MAJOR.MINOR.PATCH
    tags: ''
    branches: master

jobs:
  deploy:
    runs-on: macos-12
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Prevent use of implicit GitHub Actions read-only token GITHUB_TOKEN.
          # We push Javadocs to the gh-pages branch on commit.
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0  # allow build-bin/idl_to_gh_pages to get the full history
      # Don't attempt to cache Docker. Sensitive information can be stolen
      # via forks, and login session ends up in ~/.docker. This is ok because
      # we publish DOCKER_PARENT_IMAGE to ghcr.io, hence local to the runner.
      - name: Deploy
        env:
          # GH_USER=<user that created GH_TOKEN>
          GH_USER: ${{ secrets.GH_USER }}
          # GH_TOKEN=<hex token value>
          #   - pushes gh-pages during build-bin/javadoc_to_gh_pages
          #   - pushes Docker images to ghcr.io
          #   - create via https://github.com/settings/tokens
          #   - needs repo:status, public_repo, write:packages, delete:packages
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |  # GITHUB_REF will be refs/heads/master or refs/tags/MAJOR.MINOR.PATCH
          build-bin/configure_deploy &&
          build-bin/deploy $(echo ${GITHUB_REF} | cut -d/ -f 3)
